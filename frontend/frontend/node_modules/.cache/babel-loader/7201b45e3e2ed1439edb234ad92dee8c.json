{"remainingRequest":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\PostsByTag.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\PostsByTag.vue","mtime":1627317929187},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSAiQzovVXNlcnMvQWxiZXJ0by9EZXNrdG9wL3JvYWRUb0RhdGFzY2llbmNlL2Zyb250ZW5kL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90YWdnZWRUZW1wbGF0ZUxpdGVyYWwiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvQWxiZXJ0by9EZXNrdG9wL3JvYWRUb0RhdGFzY2llbmNlL2Zyb250ZW5kL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKCnZhciBfdGVtcGxhdGVPYmplY3Q7CgppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBncWwgZnJvbSAnZ3JhcGhxbC10YWcnOwppbXBvcnQgUG9zdExpc3QgZnJvbSAnQC9jb21wb25lbnRzL1Bvc3RMaXN0JzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQb3N0c0J5VGFnJywKICBjb21wb25lbnRzOiB7CiAgICBQb3N0TGlzdDogUG9zdExpc3QKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwb3N0czogbnVsbAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBwb3N0czsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXBvbGxvLnF1ZXJ5KHsKICAgICAgICAgICAgICAgIHF1ZXJ5OiBncWwoX3RlbXBsYXRlT2JqZWN0IHx8IChfdGVtcGxhdGVPYmplY3QgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsicXVlcnkgKCR0YWc6IFN0cmluZyEpIHtcbiAgICAgICAgcG9zdHNCeVRhZyh0YWc6ICR0YWcpIHtcbiAgICAgICAgICB0aXRsZVxuICAgICAgICAgIHN1YnRpdGxlXG4gICAgICAgICAgcHVibGlzaERhdGVcbiAgICAgICAgICBwdWJsaXNoZWRcbiAgICAgICAgICBtZXRhRGVzY3JpcHRpb25cbiAgICAgICAgICBzbHVnXG4gICAgICAgICAgYXV0aG9yIHtcbiAgICAgICAgICAgIHVzZXIge1xuICAgICAgICAgICAgICB1c2VybmFtZVxuICAgICAgICAgICAgICBmaXJzdE5hbWVcbiAgICAgICAgICAgICAgbGFzdE5hbWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgdGFncyB7XG4gICAgICAgICAgICBuYW1lXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9Il0pKSksCiAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgdGFnOiBfdGhpcy4kcm91dGUucGFyYW1zLnRhZwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHBvc3RzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfdGhpcy5wb3N0cyA9IHBvc3RzLmRhdGEucG9zdHNCeVRhZzsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["PostsByTag.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAQA,OAAA,GAAA,MAAA,aAAA;AACA,OAAA,QAAA,MAAA,uBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAVA,qBAUA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,OAAA,CAAA,KAAA,CAAA;AACA,gBAAA,KAAA,EAAA,GAAA,2cADA;AAqBA,gBAAA,SAAA,EAAA;AACA,kBAAA,GAAA,EAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AADA;AArBA,eAAA,CADA;;AAAA;AACA,cAAA,KADA;AA0BA,cAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA,IAAA,CAAA,UAAA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AArCA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <h2>Posts in #{{ $route.params.tag }}</h2>\r\n    <PostList :posts=\"posts\" v-if=\"posts\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gql from 'graphql-tag'\r\nimport PostList from '@/components/PostList'\r\nexport default {\r\n  name: 'PostsByTag',\r\n  components: {\r\n    PostList,\r\n  },\r\n  data () {\r\n    return {\r\n      posts: null,\r\n    }\r\n  },\r\n  async created () {\r\n    const posts = await this.$apollo.query({\r\n      query: gql`query ($tag: String!) {\r\n        postsByTag(tag: $tag) {\r\n          title\r\n          subtitle\r\n          publishDate\r\n          published\r\n          metaDescription\r\n          slug\r\n          author {\r\n            user {\r\n              username\r\n              firstName\r\n              lastName\r\n            }\r\n          }\r\n          tags {\r\n            name\r\n          }\r\n        }\r\n      }`,\r\n      variables: {\r\n        tag: this.$route.params.tag,\r\n      },\r\n    })\r\n    this.posts = posts.data.postsByTag\r\n  },\r\n}\r\n</script>"],"sourceRoot":"src/components"}]}