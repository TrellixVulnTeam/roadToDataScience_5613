{"remainingRequest":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\Card.vue?vue&type=template&id=54cdc180&scoped=true&","dependencies":[{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\Card.vue","mtime":1629100266864},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAiY29udGFpbmVyIiB9LAogICAgWwogICAgICBfYygiaDEiLCBbX3ZtLl92KCJDaWFvb28iKV0pLAogICAgICBfYygiY2VudGVyIiwgWwogICAgICAgIF9jKCJwIiwgWwogICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAiIExvcmVtIElwc3VtIGlzIHNpbXBseSBkdW1teSB0ZXh0IG9mIHRoZSBwcmludGluZyBhbmQgdHlwZXNldHRpbmcgaW5kdXN0cnkuIExvcmVtIElwc3VtIGhhcyBiZWVuIHRoZSBpbmR1c3RyeSdzIHN0YW5kYXJkIGR1bW15IHRleHQgZXZlciBzaW5jZSB0aGUgMTUwMHMsIHdoZW4gYW4gdW5rbm93biBwcmludGVyIHRvb2sgYSBnYWxsZXkgb2YgdHlwZSBhbmQgc2NyYW1ibGVkIGl0IHRvIG1ha2UgYSB0eXBlIHNwZWNpbWVuIGJvb2suIEl0IGhhcyBzdXJ2aXZlZCBub3Qgb25seSBmaXZlIGNlbnR1cmllcywgYnV0IGFsc28gdGhlIGxlYXAgaW50byBlbGVjdHJvbmljIHR5cGVzZXR0aW5nLCByZW1haW5pbmcgZXNzZW50aWFsbHkgdW5jaGFuZ2VkLiBJdCB3YXMgcG9wdWxhcmlzZWQgaW4gdGhlIDE5NjBzIHdpdGggdGhlIHJlbGVhc2Ugb2YgTGV0cmFzZXQgc2hlZXRzIGNvbnRhaW5pbmcgTG9yZW0gSXBzdW0gcGFzc2FnZXMsIGFuZCBtb3JlIHJlY2VudGx5IHdpdGggZGVza3RvcCBwdWJsaXNoaW5nIHNvZnR3YXJlIGxpa2UgQWxkdXMgUGFnZU1ha2VyIGluY2x1ZGluZyB2ZXJzaW9ucyBvZiBMb3JlbSBJcHN1bS4gV2h5IGRvIHdlIHVzZSBpdD8gSXQgaXMgYSBsb25nIGVzdGFibGlzaGVkIGZhY3QgdGhhdCBhIHJlYWRlciB3aWxsIGJlIGRpc3RyYWN0ZWQgYnkgdGhlIHJlYWRhYmxlIGNvbnRlbnQgb2YgYSBwYWdlIHdoZW4gbG9va2luZyBhdCBpdHMgbGF5b3V0LiBUaGUgcG9pbnQgb2YgdXNpbmcgTG9yZW0gSXBzdW0gaXMgdGhhdCBpdCBoYXMgYSBtb3JlLW9yLWxlc3Mgbm9ybWFsIGRpc3RyaWJ1dGlvbiBvZiBsZXR0ZXJzLCBhcyBvcHBvc2VkIHRvIHVzaW5nICdDb250ZW50IGhlcmUsIGNvbnRlbnQgaGVyZScsIG1ha2luZyBpdCBsb29rIGxpa2UgcmVhZGFibGUgRW5nbGlzaC4gTWFueSBkZXNrdG9wIHB1Ymxpc2hpbmcgcGFja2FnZXMgYW5kIHdlYiBwYWdlIGVkaXRvcnMgbm93IHVzZSBMb3JlbSBJcHN1bSBhcyB0aGVpciBkZWZhdWx0IG1vZGVsIHRleHQsIGFuZCBhIHNlYXJjaCBmb3IgJ2xvcmVtIGlwc3VtJyB3aWxsIHVuY292ZXIgbWFueSB3ZWIgc2l0ZXMgc3RpbGwgaW4gdGhlaXIgaW5mYW5jeS4gVmFyaW91cyB2ZXJzaW9ucyBoYXZlIGV2b2x2ZWQgb3ZlciB0aGUgeWVhcnMsIHNvbWV0aW1lcyBieSBhY2NpZGVudCwgc29tZXRpbWVzIG9uIHB1cnBvc2UgKGluamVjdGVkIGh1bW91ciBhbmQgdGhlIGxpa2UpLiAiCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkIiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2FyZC1pbWciLAogICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBoZWlnaHQ6ICIzMDBweCIgfSwKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvd2ViIHNjcmFwaW5nLnN2ZyIpLCBhbHQ6ICIuLi4iIH0KICAgICAgICAgIH0pLAogICAgICAgICAgX2MoInJvdXRlci1saW5rIiwgeyBhdHRyczogeyB0bzogIi8iIH0gfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtaW1nLW92ZXJsYXkiIH0sIFsKICAgICAgICAgICAgICBfYygiaDUiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC10aXRsZSIgfSwgW192bS5fdigiV2ViIFNjcmFwaW5nIildKSwKICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXRleHQiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgIldlYiBzY3JhcGluZyBpcyBvbmUgb2YgdGhlIG1hbnkgd2F5cyB0aGF0IGEgZGF0YSBzY2llbnRpc3QgY2FuIHVzZSB0byBhY2Nlc3MgZGF0YSBmcm9tIHRoZSBpbnRlcm5ldC4gSWYgeW91IHdhbnQgdG8gbGVhcm4gbW9yZSBhYm91dCBpdCBjbGljayBoZXJlISIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgeyBzdGF0aWNDbGFzczogImNhcmQiIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjYXJkLWltZyIsCiAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGhlaWdodDogIjMwMHB4IiB9LAogICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy93ZWIgc2NyYXBpbmcuc3ZnIiksIGFsdDogIi4uLiIgfQogICAgICAgICAgfSksCiAgICAgICAgICBfYygicm91dGVyLWxpbmsiLCB7IGF0dHJzOiB7IHRvOiAiLyIgfSB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC1pbWctb3ZlcmxheSIgfSwgWwogICAgICAgICAgICAgIF9jKCJoNSIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIkV4cGxvcmF0b3J5IERhdGEgQW5hbHlzaXMiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImNhcmQtdGV4dCIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAiV2ViIHNjcmFwaW5nIGlzIG9uZSBvZiB0aGUgbWFueSB3YXlzIHRoYXQgYSBkYXRhIHNjaWVudGlzdCBjYW4gdXNlIHRvIGFjY2VzcyBkYXRhIGZyb20gdGhlIGludGVybmV0LiBJZiB5b3Ugd2FudCB0byBsZWFybiBtb3JlIGFib3V0IGl0IGNsaWNrIGhlcmUhIgogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygKICAgICAgICAiZGl2IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAiY2FyZCIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImNhcmQtaW1nIiwKICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgaGVpZ2h0OiAiMzAwcHgiIH0sCiAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL3dlYiBzY3JhcGluZy5zdmciKSwgYWx0OiAiLi4uIiB9CiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvIiB9IH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLWltZy1vdmVybGF5IiB9LCBbCiAgICAgICAgICAgICAgX2MoImg1IiwgeyBzdGF0aWNDbGFzczogImNhcmQtdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigiTWFjaGluZSBMZWFybmluZyIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoInAiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICJXZWIgc2NyYXBpbmcgaXMgb25lIG9mIHRoZSBtYW55IHdheXMgdGhhdCBhIGRhdGEgc2NpZW50aXN0IGNhbiB1c2UgdG8gYWNjZXNzIGRhdGEgZnJvbSB0aGUgaW50ZXJuZXQuIElmIHlvdSB3YW50IHRvIGxlYXJuIG1vcmUgYWJvdXQgaXQgY2xpY2sgaGVyZSEiCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjYXJkIiB9LAogICAgICAgIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY2FyZC1pbWciLAogICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBoZWlnaHQ6ICIzMDBweCIgfSwKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvd2ViIHNjcmFwaW5nLnN2ZyIpLCBhbHQ6ICIuLi4iIH0KICAgICAgICAgIH0pLAogICAgICAgICAgX2MoInJvdXRlci1saW5rIiwgeyBhdHRyczogeyB0bzogIi8iIH0gfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNhcmQtaW1nLW92ZXJsYXkiIH0sIFsKICAgICAgICAgICAgICBfYygiaDUiLCB7IHN0YXRpY0NsYXNzOiAiY2FyZC10aXRsZSIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJEZWVwIExlYXJuaW5nIikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJjYXJkLXRleHQiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgIldlYiBzY3JhcGluZyBpcyBvbmUgb2YgdGhlIG1hbnkgd2F5cyB0aGF0IGEgZGF0YSBzY2llbnRpc3QgY2FuIHVzZSB0byBhY2Nlc3MgZGF0YSBmcm9tIHRoZSBpbnRlcm5ldC4gSWYgeW91IHdhbnQgdG8gbGVhcm4gbW9yZSBhYm91dCBpdCBjbGljayBoZXJlISIKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}