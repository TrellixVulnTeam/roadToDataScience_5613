{"remainingRequest":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\homepage\\IntroductionSection.vue?vue&type=style&index=0&id=25075d1c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\homepage\\IntroductionSection.vue","mtime":1632299759674},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoNCi5pbnRyb3sNCiAgd2lkdGg6IDkwdnc7DQp9DQoNCg0KcCB7DQogICAgbWFyZ2luLXRvcDogNXZoOw0KICAgIGZvbnQtc2l6ZTogM3ZoOw0KICAgIGxpbmUtaGVpZ2h0OiA0LjJ2aDsNCiAgICBsZXR0ZXItc3BhY2luZzogMC4wNXZ3Ow0KICAgIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7DQp9DQoNCmlucHV0IHsNCiAgICB3aWR0aDogNDB2aDsNCiAgICBoZWlnaHQ6IDd2aDsNCiAgICBtYXJnaW4tdG9wOiA1dmg7DQogICAgZm9udC1zaXplOiAyLjV2aDsNCiAgICBwYWRkaW5nLWxlZnQ6IDJ2dzsNCiAgICBvdXRsaW5lOiBub25lOw0KICAgIGZvbnQtd2VpZ2h0OiA1MDA7DQoNCn0NCg0KDQpidXR0b24gew0KICAgIHdpZHRoOiAxNHZoOw0KICAgIGhlaWdodDogN3ZoOw0KICAgIGZvbnQtc2l6ZTogMi41dmg7DQogICAgZm9udC13ZWlnaHQ6IDUwMDsNCn0NCg0KDQo="},{"version":3,"sources":["IntroductionSection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"IntroductionSection.vue","sourceRoot":"src/components/homepage","sourcesContent":["<template>\r\n    <div id=\"intro\">\r\n        <h1 style=\"font-size:15vh; margin-top:2vh;letter-spacing: 0.05vw;\">Road to Data Science</h1>\r\n        <p>Data science is one of the hottest topics of the moment, learning it it's a smart investment for your future</p>\r\n        <p>Begin your road to data science here</p>\r\n\r\n        <form method=\"POST\" @submit.prevent=\"subscribe\">\r\n        <div id=\"email-btn\">\r\n            <span>\r\n            <input type=\"email\" id=\"inlineFormInput\" placeholder=\"Email\" v-model=\"email\">\r\n            </span>\r\n            <span>\r\n            <button type=\"submit\" class=\"btn-primary mb-2\">Learn</button>\r\n            </span>\r\n        </div>\r\n        </form>\r\n        <div v-if=\"subscribed\"><p>Congratulations, you joined the newsletter</p></div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { CreateEmail, EmailQuery } from '../../graphqlQueries/graphql'\r\n\r\nexport default {\r\n    name: \"IntroductionSection\",\r\n    data () {\r\n        return {\r\n        email: '',\r\n        subscribed: false,\r\n        }\r\n  },\r\n\r\n    methods:{   \r\n      \r\n      async subscribe() {\r\n      const email = this.email\r\n\r\n      if (email !== ''){\r\n          this.subscribed = true\r\n    \r\n          // Call to the graphql mutation\r\n          let data = await this.$apollo.mutate({\r\n            // Query\r\n            mutation: CreateEmail,\r\n            // Parameters\r\n            variables: {\r\n              email: email,\r\n            },\r\n            update: (store, { data: { createEmail } }) => {\r\n              // Add to All tasks list\r\n              const data = store.readQuery({ query: EmailQuery })\r\n              data.emails.push(createEmail.email)\r\n              store.writeQuery({ query: EmailQuery, data })\r\n            },\r\n            })\r\n            console.log( data)\r\n\r\n      }\r\n\r\n    }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.intro{\r\n  width: 90vw;\r\n}\r\n\r\n\r\np {\r\n    margin-top: 5vh;\r\n    font-size: 3vh;\r\n    line-height: 4.2vh;\r\n    letter-spacing: 0.05vw;\r\n    text-rendering: optimizeLegibility;\r\n}\r\n\r\ninput {\r\n    width: 40vh;\r\n    height: 7vh;\r\n    margin-top: 5vh;\r\n    font-size: 2.5vh;\r\n    padding-left: 2vw;\r\n    outline: none;\r\n    font-weight: 500;\r\n\r\n}\r\n\r\n\r\nbutton {\r\n    width: 14vh;\r\n    height: 7vh;\r\n    font-size: 2.5vh;\r\n    font-weight: 500;\r\n}\r\n\r\n\r\n</style>"]}]}