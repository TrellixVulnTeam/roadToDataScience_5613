{"remainingRequest":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\topicspage\\PostTopic.vue?vue&type=template&id=45360cfa&scoped=true&","dependencies":[{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\topicspage\\PostTopic.vue","mtime":1632216669747},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfdm0ubm9Qb3N0cwogICAgICA/IF9jKCJkaXYiLCBbX3ZtLl9tKDApXSkKICAgICAgOiBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgX3ZtLl9sKF92bS5nZXRUb3BpY1Bvc3RzLCBmdW5jdGlvbihwb3N0KSB7CiAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7IGtleTogcG9zdC50aXRsZSwgc3RhdGljQ2xhc3M6ICJwb3N0IiB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImF1dGhvci10YWciIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJwb3N0LWF1dGhvciIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MocG9zdC5hdXRob3IudXNlci5maXJzdE5hbWUpICsKICAgICAgICAgICAgICAgICAgICAgICAgICAiICIgKwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhwb3N0LmF1dGhvci51c2VyLmxhc3ROYW1lKQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgInRleHQtZGVjb3JhdGlvbiI6ICJub25lIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogIi90b3BpYy8iICsgcG9zdC50YWdzWzBdLm5hbWUgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAicG9zdC10YWciIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKHBvc3QudGFnc1swXS5uYW1lKSkKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJ0ZXh0LWRlY29yYXRpb24iOiAibm9uZSIgfSwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogIi9wb3N0LyIgKyBwb3N0LnNsdWcgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoImgzIiwgeyBzdGF0aWNDbGFzczogInBvc3QtdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MocG9zdC50aXRsZSkpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInBvc3Qtc3VidGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhwb3N0LnN1YnRpdGxlKSkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyAidGV4dC1kZWNvcmF0aW9uIjogIm5vbmUiIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86ICIvcG9zdC8iICsgcG9zdC5zbHVnIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBvc3QtaW1hZ2UiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiAiIiArIHBvc3QucG9zdEltYWdlLCBhbHQ6ICIiIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoImFydGljbGUiLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicG9zdC10cnVuY2F0ZWQtYm9keSIsCiAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IGlubmVySFRNTDogX3ZtLl9zKHBvc3QudHJ1bmNhdGVkQm9keSkgfQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJ0ZXh0LWRlY29yYXRpb24iOiAibm9uZSIgfSwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogIi9wb3N0LyIgKyBwb3N0LnNsdWcgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyZWFkIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJwb3N0LXJlYWRpbmctdGltZSIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIlJlYWRpbmcgdGltZSIpCiAgICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogInRpbWUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhwb3N0LnJlYWRpbmdUaW1lKSArICIgTWluIikKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKCJociIpCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIH0pLAogICAgICAgICAgMAogICAgICAgICkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInBvc3QiIH0sIFsKICAgICAgX2MoImgzIiwgeyBzdGF0aWNDbGFzczogInBvc3QtdGl0bGUiIH0sIFtfdm0uX3YoIk5vIHBvc3RzIHlldC4uLiIpXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}