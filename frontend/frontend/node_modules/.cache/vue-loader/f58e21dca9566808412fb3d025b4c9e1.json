{"remainingRequest":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\aboutpage\\NewsLetter.vue?vue&type=style&index=0&id=7f384148&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\src\\components\\aboutpage\\NewsLetter.vue","mtime":1631890479111},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alberto\\Desktop\\roadToDatascience\\frontend\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoNCi5uZXdzbGV0dGVyew0KICBkaXNwbGF5OiBibG9jazsNCiAgbWFyZ2luLWxlZnQ6IGF1dG87DQogIG1hcmdpbi1yaWdodDogYXV0bzsNCiAgd2lkdGg6IDEwMCU7DQogIG1heC13aWR0aDogOTB2aDsNCg0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmOw0KICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMGRlZywgI2ZmZmZmZiAwJSwgI2Y3ZjdmNyA3NCUpOw0KICBtaW4taGVpZ2h0OiAzM3ZoOw0KICBwYWRkaW5nOiA1dmg7DQoNCiAgYm9yZGVyLXRvcC1zdHlsZTogc29saWQ7DQogIGJvcmRlci10b3AtY29sb3I6IHJnYmEoMTAyLCAxMzgsIDE3MCwgMSk7DQogIGJvcmRlci10b3Atd2lkdGg6IDNweDsNCg0KICBtYXJnaW4tYm90dG9tOiAxMHZoOw0KfQ0KDQppbnB1dCB7DQogICAgd2lkdGg6IDQwdmg7DQogICAgaGVpZ2h0OiA3dmg7DQogICAgbWFyZ2luLXRvcDogNjBweDsNCiAgICBmb250LXNpemU6IDJ2aDsNCiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7DQogICAgb3V0bGluZTogbm9uZTsNCg0KfQ0KDQpidXR0b24gew0KICAgIHdpZHRoOiAxNHZoOw0KICAgIGhlaWdodDogN3ZoOw0KICAgIGZvbnQtc2l6ZTogMnZoOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTAyLCAxMzgsIDE3MCwgMSk7DQogICAgYm9yZGVyLXN0eWxlOiBub25lOw0KICAgIGJvcmRlci1jb2xvcjogcmdiYSgxMDIsIDEzOCwgMTcwLCAxKTsNCiAgICBvdXRsaW5lOiBub25lOw0KfQ0KDQoNCi5zaWduLXVwew0KICBmb250LXNpemU6NHZoOw0KICBmb250LXdlaWdodDo3MDA7DQp9DQouZGVzY3sNCiAgZm9udC1zaXplOjIuMnZoOw0KfQ0KDQo="},{"version":3,"sources":["NewsLetter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NewsLetter.vue","sourceRoot":"src/components/aboutpage","sourcesContent":["<template>\r\n  <div class=\"newsletter\">\r\n    <p class=\"sign-up\">Sign up to the newsletter</p>\r\n    <p class=\"desc\">Stay tuned for more great articles!</p>\r\n\r\n    <form action=\"POST\" @submit.prevent=\"subscribe\">\r\n    <input type=\"email\" id=\"inlineFormInput\" placeholder=\"Email\" v-model=\"email\">\r\n    <button type=\"submit\" class=\"btn-primary mb-2\">Learn More</button>\r\n\r\n    </form>\r\n    <div v-if=\"subscribed\"><p class=\"desc\">Congratulations, you joined the newsletter</p></div>\r\n  </div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n\r\nimport { CreateEmail, EmailQuery } from '../../graphqlQueries/graphql'\r\n\r\n\r\nexport default {\r\n    name:'NewsLetter',\r\n    data(){\r\n        return{\r\n            email: '',\r\n            subscribed: false\r\n        }\r\n    },\r\n    methods:{\r\n    async subscribe() {\r\n    const email = this.email\r\n\r\n    if (email !== ''){\r\n      this.subscribed = true\r\n  \r\n      // Call to the graphql mutation\r\n      let data = await this.$apollo.mutate({\r\n        // Query\r\n        mutation: CreateEmail,\r\n        // Parameters\r\n        variables: {\r\n          email: email,\r\n        },\r\n        update: (store, { data: { createEmail } }) => {\r\n          // Add to All tasks list\r\n          const data = store.readQuery({ query: EmailQuery })\r\n          data.emails.push(createEmail.email)\r\n          store.writeQuery({ query: EmailQuery, data })\r\n        },\r\n        })\r\n        console.log( data)\r\n    }\r\n\r\n    }\r\n    }\r\n    \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.newsletter{\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  max-width: 90vh;\r\n\r\n  background-color: #ffffff;\r\n  background-image: linear-gradient(0deg, #ffffff 0%, #f7f7f7 74%);\r\n  min-height: 33vh;\r\n  padding: 5vh;\r\n\r\n  border-top-style: solid;\r\n  border-top-color: rgba(102, 138, 170, 1);\r\n  border-top-width: 3px;\r\n\r\n  margin-bottom: 10vh;\r\n}\r\n\r\ninput {\r\n    width: 40vh;\r\n    height: 7vh;\r\n    margin-top: 60px;\r\n    font-size: 2vh;\r\n    padding-left: 30px;\r\n    outline: none;\r\n\r\n}\r\n\r\nbutton {\r\n    width: 14vh;\r\n    height: 7vh;\r\n    font-size: 2vh;\r\n    background-color: rgba(102, 138, 170, 1);\r\n    border-style: none;\r\n    border-color: rgba(102, 138, 170, 1);\r\n    outline: none;\r\n}\r\n\r\n\r\n.sign-up{\r\n  font-size:4vh;\r\n  font-weight:700;\r\n}\r\n.desc{\r\n  font-size:2.2vh;\r\n}\r\n\r\n</style>"]}]}